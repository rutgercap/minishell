#!/bin/bash
#set -x
set -e

function shell_test()
{
	echo $1 | ../minishell > minishell_out
	echo $1 | bash > bash_out
	diff minishell_out bash_out || { echo "test failed for: \"$1\""; exit 1; }
}

function output_test()
{
	export OUTFILE=minishell_outfile
	echo $1 | ../minishell > minishell_stdout
	export OUTFILE=bash_outfile
	echo $1 | bash > bash_stdout
	diff minishell_stdout bash_stdout || { echo "stdout of output test failed for: \"$1\""; exit 1;}
	diff minishell_outfile bash_outfile || { echo "outfile of output test failed for: \"$1\""; exit 1;}
}

export READLINE_DIR=~/homebrew/Cellar/readline/8.1.1
shopt -s extglob
mkdir -p objs_san
mkdir -p objs_leaks
cd objs_san
gcc -Wall -Wextra -c -g -fsanitize=address  -I.. ../!(minishe*).c -I $READLINE_DIR/include/
cd ..
cd objs_leaks
gcc -Wall -Wextra -c -g -I.. ../!(minishe*).c -I $READLINE_DIR/include/
cd ..

make -C ..
for file in test*.c
do
	export BASE=${file%.*}
	echo "checking $BASE"
	gcc -Wall -Wextra -g -fsanitize=address -L../Libft -I.. $file objs_san/*.o -o ${file%.*} -lft -I $READLINE_DIR/include/ -L $READLINE_DIR/lib/ -lreadline ../get_next_line/get_next_line.a
	./${file%.*} > ${file%.*}.check
	diff ${file%.*}.check ${file%.*}.out
	sed -i '' '$ d' $file 
	echo "system(\"leaks -quiet $BASE > leaks_output\");}" >> $file 
	gcc -Wall -Wextra -g -L../Libft -I.. $file objs_leaks/*.o -o ${file%.*} -lft -I $READLINE_DIR/include/ -L $READLINE_DIR/lib/ -lreadline ../get_next_line/get_next_line.a
	sed -i '' '$ d' $file
	echo "}" >> $file 
	./${file%.*} > ${file%.*}.check
	diff ${file%.*}.check ${file%.*}.out
	cat leaks_output | grep -q ' 0 leaks' || { echo "leaks found!"; exit 1; }
done
shopt -u extglob

shell_test "ls | ls | ls | ls | ls | ls"
shell_test "echo *konijn"
shell_test "echo * *bla"
shell_test "ls *.c | cat"
shell_test "ls || cat"
shell_test "ls ||| cat"
output_test 'ls | cat > $OUTFILE'
shell_test 'ls > $outfile || cat'
shell_test 'ls > $outfile ||| cat'
output_test 'ls > $outfile || cat'
output_test 'ls > $outfile ||| cat'
output_test '< test_shell_split.c grep 'a'|grep 'm' | wc -l|cat -e > $OUTFILE'

echo FINISHED!!!!!
